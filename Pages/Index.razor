@page "/index"
@inject IJSRuntime JSRuntime
@layout LayoutPage


@* <section class=" bg-gradient-to-br from-purple-600 to-blue-500 flex items-center justify-center relative overflow-hidden h-full w-full"> *@



    <div class="page bg-gradient-to-br from-purple-600 to-blue-500 flex items-center justify-center relative overflow-hidden h-full w-full">
        <!-- Curved divider -->
        <div class="absolute inset-0 z-0">
            <svg class="absolute top-0 left-0 w-full" viewBox="0 0 100 100" preserveAspectRatio="none">
            <path d="M0,0 C40,100 60,100 100,0 Z" fill="#030B76" class="transition-all duration-300 ease-in-out" />
            </svg>
        </div>



        <!-- Content container -->
    <div class="relative z-10 text-center p-8 max-w-md w-full flex flex-col items-center justify-center h-full">

            <h1 class="text-4xl font-bold mb-6 text-white drop-shadow-lg">
            <span class="text-gradient">THEOMNIX 200</span>

                </h1>

            <!-- Central button -->
        <button class="@($"w-48 h-48 rounded-full bg-gradient-to-r from-orange-500 to-orange-700 shadow-lg flex items-center justify-center text-white text-xl font-bold focus:outline-none {(IsScaling ? "animate-scale" : "")}")" @onclick="HandleButtonClick">
            <span class="mr-2">Click me!</span>
        </button>

        


            <!-- Mining status -->
            <p class="mt-8 text-lg font-semibold text-gray-800">
                Status: @(IsAnimating ? "Mining..." : "Ready to mine")
            </p>


            <!-- Additional info -->
        @*
<div class="mt-12 bg-white bg-opacity-20 backdrop-blur-lg rounded-xl p-6 shadow-xl">
            <h2 class="text-2xl font-bold mb-4 text-white">How it works</h2>
            <p class="text-gray-100">
                Click the button to start mining for airdrop tokens. The more you mine, the higher your chances of receiving valuable tokens!
            </p>
        </div>


        </div>

        <!-- Floating particles -->
        @for (int i = 0; i < 20; i++)
        {
            <div class="particle absolute w-3 h-3 bg-yellow-300 rounded-full opacity-75"
                 style="left: @($"{Random.Shared.Next(100)}%"); top: @($"{Random.Shared.Next(100)}%");">
            </div>
        }
    </div>

@* </section> *@

@code {
    private bool IsAnimating { get; set; } = false;
    private bool IsScaling { get; set; } = false;

    // private async Task HandleButtonClick()
    // {
    //     IsAnimating = true;
    //     StateHasChanged();
    //     await Task.Delay(1000);
    //     IsAnimating = false;
    //     StateHasChanged();
    // }

    private async Task HandleButtonClick()
    {
        IsScaling = true;
        StateHasChanged();
        await Task.Delay(500);
        IsScaling = false;
        StateHasChanged();
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initializeParticles");
        }
    }
}

