@page "/"
@layout LayoutPage 
@inject ITelegramAuth telegramServ
@inject ILocalStorageService lStorage
@inject Tel_BotService botService
<PageTitle>Home</PageTitle>



<div class="container" style="color:darkslateblue">

    <div class="flex flex-col h-screen bg-background text-foreground" >
        <main class="flex-1 flex flex-col items-center justify-center gap-8 px-6 py-12" style="color:white">
            <div class="flex flex-col items-center gap-2">
                <h1 class="text-3xl font-bold">Airdrop Claim</h1>
                <p class="text-muted-foreground">Claim your free tokens every 6 hours</p>
            </div>
            <div class="bg-card rounded-lg p-6 w-full max-w-md flex flex-col items-center gap-4">
                <div class="bg-muted rounded-full w-20 h-20 flex items-center justify-center text-4xl">
                   @* <img src="/images/dakcoin.jpg" /> *@
                   
                    <div class="loader">
                        
                        <span>@_firstName </span>
                    </div>
                  @*
                    @_username, @FullName
                    
                  *@

                   @*  @_user.FirstName 🪙 *@
                </div>
                <div class="text-4xl font-bol text-center">
                    1,235 <span class="text-muted-foreground text-2xl">TOKENS</span>
                </div>

                <a href="/index">

                    <button type="submit"
                            style="background-color:#C27406; width:120px  padding: 50px 50px"
                            class="w-120 h-120 rounded-full inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 text-primary-foreground h-11 rounded-md px-8 w-full bg-[#111325] hover:bg-[#111325]/90">
                    The OMNIX 200
                </button>
                </a>

               <div class="text-muted-foreground text-sm ">
                    Next airdrop in <span class="font-medium">@*  @NewTimeLeft.ToString("hh\\:mm\\:ss") *@ </span>
                </div>
            </div>
            @* <div class="bg-card rounded-lg p-6 w-full max-w-md flex flex-col gap-4">
                <h2 class="text-lg font-medium">Airdrop History</h2>
                <div class="grid gap-3">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center gap-2">
                            <div class="bg-muted rounded-full w-8 h-8 flex items-center justify-center text-sm">🪙</div>
                            <div>
                                <div class="font-medium">100 TOKENS</div>
                                <div class="text-xs text-muted-foreground">June 1, 2023</div>
                            </div>
                        </div>
                        <div class="bg-muted rounded-full px-2 py-1 text-xs font-medium">Claimed</div>
                    </div>
                    <div class="flex items-center justify-between">
                        <div class="flex items-center gap-2">
                            <div class="bg-muted rounded-full w-8 h-8 flex items-center justify-center text-sm">🪙</div>
                            <div>
                                <div class="font-medium">50 TOKENS</div>
                                <div class="text-xs text-muted-foreground">May 25, 2023</div>
                            </div>
                        </div>
                        <div class="bg-muted rounded-full px-2 py-1 text-xs font-medium">Claimed</div>
                    </div>
                    <div class="flex items-center justify-between">
                        <div class="flex items-center gap-2">
                            <div class="bg-muted rounded-full w-8 h-8 flex items-center justify-center text-sm">🪙</div>
                            <div>
                                <div class="font-medium">75 TOKENS</div>
                                <div class="text-xs text-muted-foreground">May 19, 2023</div>
                            </div>
                        </div>
                        <div class="bg-muted rounded-full px-2 py-1 text-xs font-medium">Claimed</div>
                    </div>
                </div>
            </div> *@
        </main>
       
    </div>
</div>




@code{
    private string _username;
    private string Storedusername;
    private string FullName;




    private long _userId;
    private string _firstName;


    private TelegramUser _user = new TelegramUser();
    private TelegramBotClient _bot = new TelegramBotClient("7324366764:AAE0FiQdBDSnHgZvnv2ZU3f5f9DAiGIMhx8");


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //Storedusername = await lStorage.GetItemAsStringAsync("username");
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        using var cts = new CancellationTokenSource();
        var receiverOptions = new ReceiverOptions
            {
                AllowedUpdates = new UpdateType[]
                        {
                    UpdateType.Message,
                    UpdateType.EditedMessage,
                        }
            };

        // var user = await lStorage.GetItemAsStringAsync("username");
            /*if (!string.IsNullOrWhiteSpace(Storedusername))
            {

            var result = await telegramServ.GetUser(Storedusername);
                if (result != null)
                {
                FullName = $"{result.FirstName}, {result.LastName}";
                _username = $"{result.username}";
            StateHasChanged();
            }
                else
                {
                _bot.StartReceiving(UpdataeHandler, ErrorHandler, receiverOptions);
        }
        }
        else
            {

            _bot.StartReceiving(UpdataeHandler, ErrorHandler, receiverOptions);
        }*/
        _bot.StartReceiving(UpdataeHandler, ErrorHandler, receiverOptions, cancellationToken: cts.Token);

        var me = await _bot.GetMeAsync();

        Console.WriteLine($"Start listening for @{me.Username}, {_firstName}");
        Console.ReadLine(); // Keep the application running until Enter is pressed

        cts.Cancel(); // Stop the bot

    }

    private async Task ErrorHandler(ITelegramBotClient client, Exception exception, CancellationToken token)
    {

    }

    private async Task UpdataeHandler(ITelegramBotClient client, Update update, CancellationToken token)
    {
        if (update.Type == UpdateType.Message)
        {
            if (update.Message.Type == MessageType.Text)
            {

                var text = update.Message.Text;
                var id = update.Message.Chat.Id;
                var Username = update.Message.From.Username;//Chat.Username;
                _firstName = update.Message.From.FirstName;
                var lastName = update.Message.Chat.LastName;
                var getUser = update.Message.From.Id;


                Console.WriteLine($"{Username} |{id} | {text}, {getUser}");

                TelegramUser users = new TelegramUser
                    {
                        Id = getUser,
                        Username = Username,
                        FirstName = _firstName,
                        LastName = lastName
                    };

                await telegramServ.SignInUser(users);
               


            }
        }
    }


}
